<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>使用指南 on Siwei Xu</title>
    <link>https://xusiwei.github.io/categories/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
    <description>Recent content in 使用指南 on Siwei Xu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 08 Mar 2016 22:58:33 +0800</lastBuildDate>
    
	<atom:link href="https://xusiwei.github.io/categories/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker 入门指南</title>
      <link>https://xusiwei.github.io/post/2016/docker-get-start/</link>
      <pubDate>Tue, 08 Mar 2016 22:58:33 +0800</pubDate>
      
      <guid>https://xusiwei.github.io/post/2016/docker-get-start/</guid>
      <description>&lt;p&gt;本文是实践官方“Get Started”的一个记录，由于我的桌面系统是Debian 8，本文的操作仅确保在 Debian 8 上正确。
指南链接（Linux版）： &lt;a href=&#34;https://docs.docker.com/linux/&#34;&gt;https://docs.docker.com/linux/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;安装-docker&#34;&gt;安装 Docker&lt;/h2&gt;

&lt;h3 id=&#34;官方脚本安装&#34;&gt;官方脚本安装&lt;/h3&gt;

&lt;p&gt;如果没有 curl ，先安装 curl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install curl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用curl下载安装脚本并运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -fsSL https://get.docker.com/ | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装成功后会提示你，使用如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker xu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将当前用户（xu）加到docker组，此后运行docker可以不加sudo。另外，让当前用户的组别改变需要重新登录（先log out再log in）。&lt;/p&gt;

&lt;h3 id=&#34;验证&#34;&gt;验证&lt;/h3&gt;

&lt;h3 id=&#34;bash&#34;&gt;bash&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;docker run -i -t debian docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以用docker创建一个交互的bash会话，在新的会话中运行ps -ef：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xu@debian:~$ docker run -i -t debian bash
root@d99cc11447c7:/#
root@d99cc11447c7:/#
root@d99cc11447c7:/# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  2 15:32 ?        00:00:00 bash
root         8     1  0 15:32 ?        00:00:00 ps -ef
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到，仅有两个进程，而且pid都非常小。这说明，这个会话环境已经与外界隔离了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NGINX 源码安装</title>
      <link>https://xusiwei.github.io/post/2016/nginx-source-install/</link>
      <pubDate>Mon, 07 Mar 2016 23:35:28 +0800</pubDate>
      
      <guid>https://xusiwei.github.io/post/2016/nginx-source-install/</guid>
      <description>&lt;p&gt;NIGNX 是由 Igor Sysoev 开发的一个 Web 服务器。
官网：&lt;a href=&#34;http://nginx.org/&#34;&gt;http://nginx.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载页面： &lt;a href=&#34;http://nginx.org/en/download.html&#34;&gt;http://nginx.org/en/download.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;下载-nginx&#34;&gt;下载 NGINX&lt;/h2&gt;

&lt;p&gt;以 1.8.1 版本为例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://nginx.org/download/nginx-1.8.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;下载依赖库&#34;&gt;下载依赖库&lt;/h2&gt;

&lt;p&gt;NGINX必须依赖zlib和pcre, (若想让nginx支持HTTPS协议，还需OpenSSL)&lt;/p&gt;

&lt;p&gt;NGINX 使用zlib进行gzip编/解码（压缩/解压缩）， zlib: &lt;a href=&#34;http://zlib.net/&#34;&gt;http://zlib.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载 zlib-1.2.8:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://zlib.net/zlib-1.2.8.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NGINX 使用pcre作正则表达式匹配， pcre: &lt;a href=&#34;http://pcre.org/&#34;&gt;http://pcre.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ftp: &lt;a href=&#34;ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/&#34;&gt;ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载 pcre-8.38:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;解压&#34;&gt;解压&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;tar xzvf nginx-1.8.1.tar.gz

tar xzvf zlib-1.2.8.tar.gz

tar xzvf pcre-8.38.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;编译&#34;&gt;编译&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cd nginx-1.8.1/

./configure --with-pcre=../pcre-8.38 --with-zlib=../zlib-1.2.8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>用Hugo和GitHub Pages搭建博客</title>
      <link>https://xusiwei.github.io/post/2016/build-blog-with-hugo-and-github-pages/</link>
      <pubDate>Sun, 21 Feb 2016 16:36:54 +0800</pubDate>
      
      <guid>https://xusiwei.github.io/post/2016/build-blog-with-hugo-and-github-pages/</guid>
      <description>&lt;p&gt;从前天晚上开始尝试了一下用Hugo和GitHub Pages搭建静态博客，总体还算顺利（主要是Hugo用起来比较方便）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于 Hugo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hugo 是由 spf13 创建的一个静态网站生成器，首页：&lt;a href=&#34;https://www.gohugo.io/&#34;&gt;https://www.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;hugo-工作流&#34;&gt;Hugo 工作流&lt;/h1&gt;

&lt;p&gt;下面将介绍Hugo的完整工作流程：&lt;/p&gt;

&lt;h2 id=&#34;快速安装&#34;&gt;快速安装&lt;/h2&gt;

&lt;p&gt;在 &lt;a href=&#34;https://www.gohugo.io/&#34;&gt;https://www.gohugo.io/&lt;/a&gt; 能够找到 Homebrew 安装 Hugo的命令，&lt;/p&gt;

&lt;p&gt;以及Download： &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载对应的操作系统版本的Hugo二进制文件（hugo或者hugo.exe），添加到&lt;code&gt;$PATH&lt;/code&gt;能找到的目录下。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>