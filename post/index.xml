<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on xusiwei&#39;s blog</title>
    <link>https://xusiwei.github.io/post/</link>
    <description>Recent content in Posts on xusiwei&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Mon, 07 Mar 2016 23:35:28 +0800</lastBuildDate>
    <atom:link href="https://xusiwei.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>NGINX 源码安装</title>
      <link>https://xusiwei.github.io/post/2016/nginx-source-install/</link>
      <pubDate>Mon, 07 Mar 2016 23:35:28 +0800</pubDate>
      
      <guid>https://xusiwei.github.io/post/2016/nginx-source-install/</guid>
      <description>

&lt;p&gt;NIGNX 是由 Igor Sysoev 开发的一个 Web 服务器。
官网：&lt;a href=&#34;http://nginx.org/&#34;&gt;http://nginx.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载页面： &lt;a href=&#34;http://nginx.org/en/download.html&#34;&gt;http://nginx.org/en/download.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;下载-nginx:52a4c6da7db903582370865375f9a938&#34;&gt;下载 NGINX&lt;/h2&gt;

&lt;p&gt;以 1.8.1 版本为例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://nginx.org/download/nginx-1.8.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;下载依赖库:52a4c6da7db903582370865375f9a938&#34;&gt;下载依赖库&lt;/h2&gt;

&lt;p&gt;NGINX必须依赖zlib和pcre, (若想让nginx支持HTTPS协议，还需OpenSSL)&lt;/p&gt;

&lt;p&gt;NGINX 使用zlib进行gzip编/解码（压缩/解压缩）， zlib: &lt;a href=&#34;http://zlib.net/&#34;&gt;http://zlib.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载 zlib-1.2.8:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://zlib.net/zlib-1.2.8.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NGINX 使用pcre作正则表达式匹配， pcre: &lt;a href=&#34;http://pcre.org/&#34;&gt;http://pcre.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ftp: &lt;a href=&#34;ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/&#34;&gt;ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载 pcre-8.38:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;解压:52a4c6da7db903582370865375f9a938&#34;&gt;解压&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;tar xzvf nginx-1.8.1.tar.gz

tar xzvf zlib-1.2.8.tar.gz

tar xzvf pcre-8.38.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;编译:52a4c6da7db903582370865375f9a938&#34;&gt;编译&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cd nginx-1.8.1/

./configure --with-pcre=../pcre-8.38 --with-zlib=../zlib-1.2.8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装:52a4c6da7db903582370865375f9a938&#34;&gt;安装&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认将会安装到 &lt;code&gt;/usr/local/nginx&lt;/code&gt; 目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xusiwei@github:/usr/local/nginx$ tree
.
├── conf
│   ├── fastcgi.conf
│   ├── fastcgi.conf.default
│   ├── fastcgi_params
│   ├── fastcgi_params.default
│   ├── koi-utf
│   ├── koi-win
│   ├── mime.types
│   ├── mime.types.default
│   ├── nginx.conf
│   ├── nginx.conf.default
│   ├── scgi_params
│   ├── scgi_params.default
│   ├── uwsgi_params
│   ├── uwsgi_params.default
│   └── win-utf
├── html
│   ├── 50x.html
│   └── index.html
├── logs
└── sbin
    └── nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;启动:52a4c6da7db903582370865375f9a938&#34;&gt;启动&lt;/h2&gt;

&lt;p&gt;源码编译安装生成的可执行文件位于 &lt;code&gt;/usr/local/nginx/sbin/&lt;/code&gt;目录下，所以还需要将该目录加到&lt;code&gt;$PATH&lt;/code&gt;下，或者&lt;code&gt;$PATH&lt;/code&gt;的某个目录中创建一个符合链接指向 &lt;code&gt;/usr/local/nginx/sbin/nginx&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xusiwei@github:~$ cd /usr/local/bin/
xusiwei@github:/usr/local/bin$ sudo ln -s /usr/local/nginx/sbin/nginx nginx
xusiwei@github:/usr/local/bin$ nginx -v
nginx version: nginx/1.8.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，就可以启动了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xusiwei@github:~$ sudo nginx
xusiwei@github:~$ 
xusiwei@github:~$ ps -ef | grep nginx
xu       26065 24955  2 3月07 pts/2   00:00:53 kwrite content/post/2016/nginx-source-warmup.md
root     30077     1  0 00:08 ?        00:00:00 nginx: master process nginx
nobody   30078 30077  0 00:08 ?        00:00:00 nginx: worker process
xu       30080 17554  0 00:08 pts/1    00:00:00 grep nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不加参数启动，将会使用默认配置文件： &lt;code&gt;/usr/local/nginx/conf/nginx.conf&lt;/code&gt;，并以 &lt;code&gt;/usr/local/nginx/&lt;/code&gt; 为工作目录&lt;/p&gt;

&lt;h2 id=&#34;测试:52a4c6da7db903582370865375f9a938&#34;&gt;测试&lt;/h2&gt;

&lt;p&gt;此时可以使用浏览器 &lt;a href=&#34;http://localhost&#34;&gt;http://localhost&lt;/a&gt; 或 &lt;a href=&#34;http://127.0.0.1&#34;&gt;http://127.0.0.1&lt;/a&gt; 看到效果了&lt;/p&gt;

&lt;p&gt;如果是server版系统，可以用curl测试：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xusiwei@github:~$ curl http://localhost
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;For online documentation and support please refer to
&amp;lt;a href=&amp;quot;http://nginx.org/&amp;quot;&amp;gt;nginx.org&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;
Commercial support is available at
&amp;lt;a href=&amp;quot;http://nginx.com/&amp;quot;&amp;gt;nginx.com&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Thank you for using nginx.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;停止:52a4c6da7db903582370865375f9a938&#34;&gt;停止&lt;/h2&gt;

&lt;p&gt;粗暴的方式，可以直接kill掉 nginx：
    * 先用 &lt;code&gt;ps -ef | grep nginx&lt;/code&gt; 找到nginx的pid，再用 &lt;code&gt;kill pid&lt;/code&gt;杀掉nginx
    * killall nginx
nginx -s参数提供了优雅的停止nginx的操作：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nginx -s stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初次之外， -s 还有 quit, reopen, reload&lt;/p&gt;

&lt;h2 id=&#34;关于软件源安装:52a4c6da7db903582370865375f9a938&#34;&gt;关于软件源安装&lt;/h2&gt;

&lt;p&gt;多数发行版的 软件源 中都已经收录了nginx，但通常版本都比较;另外，如果你的发行版所属的发行商已经不再维护那个版本了，比如ubuntu 10.04，所以如果你用的不是最新的发行版，不推荐默认软件源从软件源安装。&lt;/p&gt;

&lt;p&gt;但如果觉得自己编译麻烦，可以从nginx.org的“源”安装预先编译好的软件包，具体步骤参见：&lt;a href=&#34;http://nginx.org/en/linux_packages.html&#34;&gt;http://nginx.org/en/linux_packages.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用Hugo和GitHub Pages搭建博客</title>
      <link>https://xusiwei.github.io/post/2016/build-blog-with-hugo-and-github-pages/</link>
      <pubDate>Sun, 21 Feb 2016 16:36:54 +0800</pubDate>
      
      <guid>https://xusiwei.github.io/post/2016/build-blog-with-hugo-and-github-pages/</guid>
      <description>

&lt;p&gt;从前天晚上开始尝试了一下用Hugo和GitHub Pages搭建静态博客，总体还算顺利（主要是Hugo用起来比较方便）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于 Hugo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hugo 是由 spf13 创建的一个静态网站生成器，首页：&lt;a href=&#34;https://www.gohugo.io/&#34;&gt;https://www.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;hugo-工作流:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;Hugo 工作流&lt;/h1&gt;

&lt;p&gt;下面将介绍Hugo的完整工作流程：&lt;/p&gt;

&lt;h2 id=&#34;快速安装:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;快速安装&lt;/h2&gt;

&lt;p&gt;在 &lt;a href=&#34;https://www.gohugo.io/&#34;&gt;https://www.gohugo.io/&lt;/a&gt; 能够找到 Homebrew 安装 Hugo的命令，&lt;/p&gt;

&lt;p&gt;以及Download： &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载对应的操作系统版本的Hugo二进制文件（hugo或者hugo.exe），添加到&lt;code&gt;$PATH&lt;/code&gt;能找到的目录下。&lt;/p&gt;

&lt;h2 id=&#34;创建站点:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;创建站点&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo new mysite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会在mysite目录生成原始（未经渲染的）站点，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd mysite
$ tree mysite
.
├── archetypes
├── config.toml
├── content
├── data
├── layouts
└── static

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;创建文章:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;创建文章&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo new about.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会在content下创建一个about.md。&lt;/p&gt;

&lt;h2 id=&#34;安装主题:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;安装主题&lt;/h2&gt;

&lt;p&gt;在 &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt; 选号主题之后，将对应主题下载到 &lt;code&gt;themes/&lt;/code&gt; 下，如hyde。&lt;/p&gt;

&lt;h3 id=&#34;配置主题:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;配置主题&lt;/h3&gt;

&lt;p&gt;不同主题会有不同可配置的参数，按照说明修改config.toml即可。&lt;/p&gt;

&lt;h2 id=&#34;生成页面:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;生成页面&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --theme=hyde
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该命令会将所有md渲染成HTML。&lt;/p&gt;

&lt;h3 id=&#34;本地预览:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;本地预览&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --theme=hyde --buildDrafts --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可在本地预览渲染效果。&lt;/p&gt;

&lt;h2 id=&#34;发布:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;发布&lt;/h2&gt;

&lt;p&gt;hugo命令默认生成html到 &lt;code&gt;public/&lt;/code&gt; 下，可用 &lt;code&gt;-d&lt;/code&gt; 选项渲染结果指向其他目录，
或者在执行hugo命令前将 创建软连接 public 指向其他目录。&lt;/p&gt;

&lt;p&gt;GitHug Pages提供了静态网页和Jeklly生成器功能，可以在 &lt;code&gt;USERNAME.githug.io&lt;/code&gt; 仓库
或其他仓库的&lt;code&gt;gh-pages&lt;/code&gt;分支部署静态网页，或Jeklly原始页面。&lt;/p&gt;

&lt;h1 id=&#34;hugo-jeklly-hexo-简单对比:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;Hugo, Jeklly, Hexo 简单对比&lt;/h1&gt;

&lt;p&gt;在使用 Hugo 之前，我先后尝试了 Hexo、Jeklly， 说说感受。
Hexo的npm安装需要依赖很多其他node库，在网络条件不好的情况下，光安装就很费劲。
Jeklly也是，虽然相对Hexo来说依赖要少一些，但安装其他还是略显麻烦。&lt;/p&gt;

&lt;p&gt;在经历过Hexo, Jeklly的痛苦之后，在安装Hugo的时候我直接选择了二进制安装。
这可能和实现技术有关。Hugo, Jeklly, Hexo分别是基于Go, Ruby, Node.js。
Go的编译型语言特性让Hugo&lt;strong&gt;更容易&lt;/strong&gt;“二进制安装”。&lt;/p&gt;

&lt;p&gt;所以相对来说，Hugo的主要优势在于安装方便，据说生成速度也更快。&lt;/p&gt;

&lt;h1 id=&#34;github-pages-相对其他博客的好处:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;GitHub Pages 相对其他博客的好处&lt;/h1&gt;

&lt;p&gt;对于程序员来说，GitHub Pages相对于：
1. 注册类的博客网站，如CSDN
2. 自建独立博客，如WrodPress&lt;/p&gt;

&lt;p&gt;GitHub Pages方式的好处在于————可以象管理代码一样管理博客，用git管理博客变更。&lt;/p&gt;

&lt;p&gt;正如 &lt;a href=&#34;https://github.com/ruanyf&#34;&gt;@ruanyf&lt;/a&gt; 所说，“他们既拥有绝对管理权，
又享受github带来的便利&amp;mdash;-不管何时何地，只要向主机提交commit，就能发布新文章。
更妙的是，这一切还是免费的，github提供无限流量，世界各地都有理想的访问速度。”&lt;/p&gt;

&lt;h1 id=&#34;参考链接:12928e9650273f3ab009a12bccc3ed6e&#34;&gt;参考链接&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;hugo中文文档 &lt;a href=&#34;http://gohugo.org/&#34;&gt;gohugo.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.coderzh.com/2015/08/29/hugo/&#34;&gt;http://blog.coderzh.com/2015/08/29/hugo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&#34;&gt;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>你好，世界</title>
      <link>https://xusiwei.github.io/post/hello-world/</link>
      <pubDate>Fri, 19 Feb 2016 23:16:09 +0800</pubDate>
      
      <guid>https://xusiwei.github.io/post/hello-world/</guid>
      <description>

&lt;p&gt;这是一篇测试博客，在这你将看到Hugo对Markdown的渲染效果。&lt;/p&gt;

&lt;h1 id=&#34;关于-hugo:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;关于 Hugo&lt;/h1&gt;

&lt;p&gt;Hugo是一个静态网站生成器&lt;/p&gt;

&lt;h1 id=&#34;headers:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Headers&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;# This is an `&amp;lt;h1&amp;gt;` tag
## This is an `&amp;lt;h2&amp;gt;` tag
###### This is an `&amp;lt;h6&amp;gt;` tag
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;this-is-an-h1-tag:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;This is an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag&lt;/h1&gt;

&lt;h2 id=&#34;this-is-an-h2-tag:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;This is an &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; tag&lt;/h2&gt;

&lt;h6 id=&#34;this-is-an-h6-tag:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;This is an &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; tag&lt;/h6&gt;

&lt;h1 id=&#34;emphasis:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Emphasis&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

_You **can** combine them_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;This text will be italic&lt;/em&gt;
&lt;em&gt;This will also be italic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This text will be bold&lt;/strong&gt;
&lt;strong&gt;This will also be bold&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You &lt;strong&gt;can&lt;/strong&gt; combine them&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;lists:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Lists&lt;/h1&gt;

&lt;h2 id=&#34;unordered:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Unordered&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;* Item 1
* Item 2
  * Item 2a
  * Item 2b
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2

&lt;ul&gt;
&lt;li&gt;Item 2a&lt;/li&gt;
&lt;li&gt;Item 2b&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ordered:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Ordered&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Item 3

&lt;ul&gt;
&lt;li&gt;Item 3a&lt;/li&gt;
&lt;li&gt;Item 3b&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;images:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Images&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;![GitHub Logo](https://github.com/fluidicon.png)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/fluidicon.png&#34; alt=&#34;GitHub Logo&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;links:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Links&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://github.com&#34;&gt;http://github.com&lt;/a&gt; - automatic!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[GitHub](http://github.com)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;blockquotes:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Blockquotes&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;As Kanye West said:
&amp;gt; We&#39;re living the future so
&amp;gt; the present is our past.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As Kanye West said:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;re living the future so
the present is our past.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;codes:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Codes&lt;/h1&gt;

&lt;h2 id=&#34;inline-code:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Inline code&lt;/h2&gt;

&lt;p&gt;I think you should use an &lt;code&gt;&amp;lt;addr&amp;gt;&lt;/code&gt; element here instead.&lt;/p&gt;

&lt;h2 id=&#34;mutiline-code:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;Mutiline code&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

int main() {
    printf(&amp;quot;Hello, World!\n&amp;quot;);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;more:aa77bbfd89a7b0ff10def205b9c08d51&#34;&gt;More&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;Hugo on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;Mastring Markdown&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>